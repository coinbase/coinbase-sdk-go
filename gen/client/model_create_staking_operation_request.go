/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateStakingOperationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateStakingOperationRequest{}

// CreateStakingOperationRequest struct for CreateStakingOperationRequest
type CreateStakingOperationRequest struct {
	// The ID of the blockchain network.
	NetworkId string `json:"network_id"`
	// The ID of the asset being staked.
	AssetId string `json:"asset_id"`
	// The type of staking operation.
	Action string `json:"action"`
	// Additional options for the staking operation.
	Options map[string]string `json:"options"`
}

type _CreateStakingOperationRequest CreateStakingOperationRequest

// NewCreateStakingOperationRequest instantiates a new CreateStakingOperationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStakingOperationRequest(networkId string, assetId string, action string, options map[string]string) *CreateStakingOperationRequest {
	this := CreateStakingOperationRequest{}
	this.NetworkId = networkId
	this.AssetId = assetId
	this.Action = action
	this.Options = options
	return &this
}

// NewCreateStakingOperationRequestWithDefaults instantiates a new CreateStakingOperationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStakingOperationRequestWithDefaults() *CreateStakingOperationRequest {
	this := CreateStakingOperationRequest{}
	return &this
}

// GetNetworkId returns the NetworkId field value
func (o *CreateStakingOperationRequest) GetNetworkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value
// and a boolean to check if the value has been set.
func (o *CreateStakingOperationRequest) GetNetworkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkId, true
}

// SetNetworkId sets field value
func (o *CreateStakingOperationRequest) SetNetworkId(v string) {
	o.NetworkId = v
}

// GetAssetId returns the AssetId field value
func (o *CreateStakingOperationRequest) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *CreateStakingOperationRequest) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *CreateStakingOperationRequest) SetAssetId(v string) {
	o.AssetId = v
}

// GetAction returns the Action field value
func (o *CreateStakingOperationRequest) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *CreateStakingOperationRequest) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *CreateStakingOperationRequest) SetAction(v string) {
	o.Action = v
}

// GetOptions returns the Options field value
func (o *CreateStakingOperationRequest) GetOptions() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *CreateStakingOperationRequest) GetOptionsOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Options, true
}

// SetOptions sets field value
func (o *CreateStakingOperationRequest) SetOptions(v map[string]string) {
	o.Options = v
}

func (o CreateStakingOperationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateStakingOperationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["network_id"] = o.NetworkId
	toSerialize["asset_id"] = o.AssetId
	toSerialize["action"] = o.Action
	toSerialize["options"] = o.Options
	return toSerialize, nil
}

func (o *CreateStakingOperationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"network_id",
		"asset_id",
		"action",
		"options",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateStakingOperationRequest := _CreateStakingOperationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateStakingOperationRequest)

	if err != nil {
		return err
	}

	*o = CreateStakingOperationRequest(varCreateStakingOperationRequest)

	return err
}

type NullableCreateStakingOperationRequest struct {
	value *CreateStakingOperationRequest
	isSet bool
}

func (v NullableCreateStakingOperationRequest) Get() *CreateStakingOperationRequest {
	return v.value
}

func (v *NullableCreateStakingOperationRequest) Set(val *CreateStakingOperationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStakingOperationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStakingOperationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStakingOperationRequest(val *CreateStakingOperationRequest) *NullableCreateStakingOperationRequest {
	return &NullableCreateStakingOperationRequest{value: val, isSet: true}
}

func (v NullableCreateStakingOperationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStakingOperationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


