/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreatePayloadSignatureRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePayloadSignatureRequest{}

// CreatePayloadSignatureRequest struct for CreatePayloadSignatureRequest
type CreatePayloadSignatureRequest struct {
	// The unsigned payload.
	UnsignedPayload string `json:"unsigned_payload"`
	// The signature of the payload.
	Signature *string `json:"signature,omitempty"`
}

type _CreatePayloadSignatureRequest CreatePayloadSignatureRequest

// NewCreatePayloadSignatureRequest instantiates a new CreatePayloadSignatureRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePayloadSignatureRequest(unsignedPayload string) *CreatePayloadSignatureRequest {
	this := CreatePayloadSignatureRequest{}
	this.UnsignedPayload = unsignedPayload
	return &this
}

// NewCreatePayloadSignatureRequestWithDefaults instantiates a new CreatePayloadSignatureRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePayloadSignatureRequestWithDefaults() *CreatePayloadSignatureRequest {
	this := CreatePayloadSignatureRequest{}
	return &this
}

// GetUnsignedPayload returns the UnsignedPayload field value
func (o *CreatePayloadSignatureRequest) GetUnsignedPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnsignedPayload
}

// GetUnsignedPayloadOk returns a tuple with the UnsignedPayload field value
// and a boolean to check if the value has been set.
func (o *CreatePayloadSignatureRequest) GetUnsignedPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnsignedPayload, true
}

// SetUnsignedPayload sets field value
func (o *CreatePayloadSignatureRequest) SetUnsignedPayload(v string) {
	o.UnsignedPayload = v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *CreatePayloadSignatureRequest) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePayloadSignatureRequest) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *CreatePayloadSignatureRequest) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *CreatePayloadSignatureRequest) SetSignature(v string) {
	o.Signature = &v
}

func (o CreatePayloadSignatureRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePayloadSignatureRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["unsigned_payload"] = o.UnsignedPayload
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	return toSerialize, nil
}

func (o *CreatePayloadSignatureRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"unsigned_payload",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatePayloadSignatureRequest := _CreatePayloadSignatureRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreatePayloadSignatureRequest)

	if err != nil {
		return err
	}

	*o = CreatePayloadSignatureRequest(varCreatePayloadSignatureRequest)

	return err
}

type NullableCreatePayloadSignatureRequest struct {
	value *CreatePayloadSignatureRequest
	isSet bool
}

func (v NullableCreatePayloadSignatureRequest) Get() *CreatePayloadSignatureRequest {
	return v.value
}

func (v *NullableCreatePayloadSignatureRequest) Set(val *CreatePayloadSignatureRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePayloadSignatureRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePayloadSignatureRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePayloadSignatureRequest(val *CreatePayloadSignatureRequest) *NullableCreatePayloadSignatureRequest {
	return &NullableCreatePayloadSignatureRequest{value: val, isSet: true}
}

func (v NullableCreatePayloadSignatureRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePayloadSignatureRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


