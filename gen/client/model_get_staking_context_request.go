/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetStakingContextRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetStakingContextRequest{}

// GetStakingContextRequest struct for GetStakingContextRequest
type GetStakingContextRequest struct {
	// The ID of the blockchain network
	NetworkId string `json:"network_id"`
	// The ID of the asset being staked
	AssetId string `json:"asset_id"`
	// The onchain address for which the staking context is being fetched
	AddressId string `json:"address_id"`
	// Additional options for getting the staking context. This typically includes network specific fields.
	Options map[string]string `json:"options"`
}

type _GetStakingContextRequest GetStakingContextRequest

// NewGetStakingContextRequest instantiates a new GetStakingContextRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetStakingContextRequest(networkId string, assetId string, addressId string, options map[string]string) *GetStakingContextRequest {
	this := GetStakingContextRequest{}
	this.NetworkId = networkId
	this.AssetId = assetId
	this.AddressId = addressId
	this.Options = options
	return &this
}

// NewGetStakingContextRequestWithDefaults instantiates a new GetStakingContextRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetStakingContextRequestWithDefaults() *GetStakingContextRequest {
	this := GetStakingContextRequest{}
	return &this
}

// GetNetworkId returns the NetworkId field value
func (o *GetStakingContextRequest) GetNetworkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value
// and a boolean to check if the value has been set.
func (o *GetStakingContextRequest) GetNetworkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkId, true
}

// SetNetworkId sets field value
func (o *GetStakingContextRequest) SetNetworkId(v string) {
	o.NetworkId = v
}

// GetAssetId returns the AssetId field value
func (o *GetStakingContextRequest) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *GetStakingContextRequest) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *GetStakingContextRequest) SetAssetId(v string) {
	o.AssetId = v
}

// GetAddressId returns the AddressId field value
func (o *GetStakingContextRequest) GetAddressId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value
// and a boolean to check if the value has been set.
func (o *GetStakingContextRequest) GetAddressIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddressId, true
}

// SetAddressId sets field value
func (o *GetStakingContextRequest) SetAddressId(v string) {
	o.AddressId = v
}

// GetOptions returns the Options field value
func (o *GetStakingContextRequest) GetOptions() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *GetStakingContextRequest) GetOptionsOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Options, true
}

// SetOptions sets field value
func (o *GetStakingContextRequest) SetOptions(v map[string]string) {
	o.Options = v
}

func (o GetStakingContextRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetStakingContextRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["network_id"] = o.NetworkId
	toSerialize["asset_id"] = o.AssetId
	toSerialize["address_id"] = o.AddressId
	toSerialize["options"] = o.Options
	return toSerialize, nil
}

func (o *GetStakingContextRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"network_id",
		"asset_id",
		"address_id",
		"options",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetStakingContextRequest := _GetStakingContextRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetStakingContextRequest)

	if err != nil {
		return err
	}

	*o = GetStakingContextRequest(varGetStakingContextRequest)

	return err
}

type NullableGetStakingContextRequest struct {
	value *GetStakingContextRequest
	isSet bool
}

func (v NullableGetStakingContextRequest) Get() *GetStakingContextRequest {
	return v.value
}

func (v *NullableGetStakingContextRequest) Set(val *GetStakingContextRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetStakingContextRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetStakingContextRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetStakingContextRequest(val *GetStakingContextRequest) *NullableGetStakingContextRequest {
	return &NullableGetStakingContextRequest{value: val, isSet: true}
}

func (v NullableGetStakingContextRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetStakingContextRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


