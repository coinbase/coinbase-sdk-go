/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BroadcastExternalTransaction200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BroadcastExternalTransaction200Response{}

// BroadcastExternalTransaction200Response External Transaction Broadcast Response
type BroadcastExternalTransaction200Response struct {
	// The transaction hash
	TransactionHash string `json:"transaction_hash"`
	// The link to view the transaction on a block explorer. This is optional and may not be present for all transactions.
	TransactionLink *string `json:"transaction_link,omitempty"`
}

type _BroadcastExternalTransaction200Response BroadcastExternalTransaction200Response

// NewBroadcastExternalTransaction200Response instantiates a new BroadcastExternalTransaction200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBroadcastExternalTransaction200Response(transactionHash string) *BroadcastExternalTransaction200Response {
	this := BroadcastExternalTransaction200Response{}
	this.TransactionHash = transactionHash
	return &this
}

// NewBroadcastExternalTransaction200ResponseWithDefaults instantiates a new BroadcastExternalTransaction200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBroadcastExternalTransaction200ResponseWithDefaults() *BroadcastExternalTransaction200Response {
	this := BroadcastExternalTransaction200Response{}
	return &this
}

// GetTransactionHash returns the TransactionHash field value
func (o *BroadcastExternalTransaction200Response) GetTransactionHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransactionHash
}

// GetTransactionHashOk returns a tuple with the TransactionHash field value
// and a boolean to check if the value has been set.
func (o *BroadcastExternalTransaction200Response) GetTransactionHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionHash, true
}

// SetTransactionHash sets field value
func (o *BroadcastExternalTransaction200Response) SetTransactionHash(v string) {
	o.TransactionHash = v
}

// GetTransactionLink returns the TransactionLink field value if set, zero value otherwise.
func (o *BroadcastExternalTransaction200Response) GetTransactionLink() string {
	if o == nil || IsNil(o.TransactionLink) {
		var ret string
		return ret
	}
	return *o.TransactionLink
}

// GetTransactionLinkOk returns a tuple with the TransactionLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BroadcastExternalTransaction200Response) GetTransactionLinkOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionLink) {
		return nil, false
	}
	return o.TransactionLink, true
}

// HasTransactionLink returns a boolean if a field has been set.
func (o *BroadcastExternalTransaction200Response) HasTransactionLink() bool {
	if o != nil && !IsNil(o.TransactionLink) {
		return true
	}

	return false
}

// SetTransactionLink gets a reference to the given string and assigns it to the TransactionLink field.
func (o *BroadcastExternalTransaction200Response) SetTransactionLink(v string) {
	o.TransactionLink = &v
}

func (o BroadcastExternalTransaction200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BroadcastExternalTransaction200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["transaction_hash"] = o.TransactionHash
	if !IsNil(o.TransactionLink) {
		toSerialize["transaction_link"] = o.TransactionLink
	}
	return toSerialize, nil
}

func (o *BroadcastExternalTransaction200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"transaction_hash",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBroadcastExternalTransaction200Response := _BroadcastExternalTransaction200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBroadcastExternalTransaction200Response)

	if err != nil {
		return err
	}

	*o = BroadcastExternalTransaction200Response(varBroadcastExternalTransaction200Response)

	return err
}

type NullableBroadcastExternalTransaction200Response struct {
	value *BroadcastExternalTransaction200Response
	isSet bool
}

func (v NullableBroadcastExternalTransaction200Response) Get() *BroadcastExternalTransaction200Response {
	return v.value
}

func (v *NullableBroadcastExternalTransaction200Response) Set(val *BroadcastExternalTransaction200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableBroadcastExternalTransaction200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableBroadcastExternalTransaction200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBroadcastExternalTransaction200Response(val *BroadcastExternalTransaction200Response) *NullableBroadcastExternalTransaction200Response {
	return &NullableBroadcastExternalTransaction200Response{value: val, isSet: true}
}

func (v NullableBroadcastExternalTransaction200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBroadcastExternalTransaction200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


