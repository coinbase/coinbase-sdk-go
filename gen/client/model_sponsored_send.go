/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// checks if the SponsoredSend type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SponsoredSend{}

// SponsoredSend An onchain sponsored gasless send.
type SponsoredSend struct {
	// The onchain address of the recipient
	ToAddressId string `json:"to_address_id"`
	// The raw typed data for the sponsored send
	RawTypedData string `json:"raw_typed_data"`
	// The typed data hash for the sponsored send. This is the typed data hash that needs to be signed by the sender.
	TypedDataHash string `json:"typed_data_hash"`
	// The signed hash of the sponsored send typed data.
	Signature *string `json:"signature,omitempty"`
	// The hash of the onchain sponsored send transaction
	TransactionHash *string `json:"transaction_hash,omitempty"`
	// The link to view the transaction on a block explorer. This is optional and may not be present for all transactions.
	TransactionLink *string `json:"transaction_link,omitempty"`
	// The status of the sponsored send
	Status string `json:"status"`
	AdditionalProperties map[string]interface{}
}

type _SponsoredSend SponsoredSend

// NewSponsoredSend instantiates a new SponsoredSend object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSponsoredSend(toAddressId string, rawTypedData string, typedDataHash string, status string) *SponsoredSend {
	this := SponsoredSend{}
	this.ToAddressId = toAddressId
	this.RawTypedData = rawTypedData
	this.TypedDataHash = typedDataHash
	this.Status = status
	return &this
}

// NewSponsoredSendWithDefaults instantiates a new SponsoredSend object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSponsoredSendWithDefaults() *SponsoredSend {
	this := SponsoredSend{}
	return &this
}

// GetToAddressId returns the ToAddressId field value
func (o *SponsoredSend) GetToAddressId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToAddressId
}

// GetToAddressIdOk returns a tuple with the ToAddressId field value
// and a boolean to check if the value has been set.
func (o *SponsoredSend) GetToAddressIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToAddressId, true
}

// SetToAddressId sets field value
func (o *SponsoredSend) SetToAddressId(v string) {
	o.ToAddressId = v
}

// GetRawTypedData returns the RawTypedData field value
func (o *SponsoredSend) GetRawTypedData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RawTypedData
}

// GetRawTypedDataOk returns a tuple with the RawTypedData field value
// and a boolean to check if the value has been set.
func (o *SponsoredSend) GetRawTypedDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RawTypedData, true
}

// SetRawTypedData sets field value
func (o *SponsoredSend) SetRawTypedData(v string) {
	o.RawTypedData = v
}

// GetTypedDataHash returns the TypedDataHash field value
func (o *SponsoredSend) GetTypedDataHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TypedDataHash
}

// GetTypedDataHashOk returns a tuple with the TypedDataHash field value
// and a boolean to check if the value has been set.
func (o *SponsoredSend) GetTypedDataHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypedDataHash, true
}

// SetTypedDataHash sets field value
func (o *SponsoredSend) SetTypedDataHash(v string) {
	o.TypedDataHash = v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *SponsoredSend) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SponsoredSend) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *SponsoredSend) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *SponsoredSend) SetSignature(v string) {
	o.Signature = &v
}

// GetTransactionHash returns the TransactionHash field value if set, zero value otherwise.
func (o *SponsoredSend) GetTransactionHash() string {
	if o == nil || IsNil(o.TransactionHash) {
		var ret string
		return ret
	}
	return *o.TransactionHash
}

// GetTransactionHashOk returns a tuple with the TransactionHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SponsoredSend) GetTransactionHashOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionHash) {
		return nil, false
	}
	return o.TransactionHash, true
}

// HasTransactionHash returns a boolean if a field has been set.
func (o *SponsoredSend) HasTransactionHash() bool {
	if o != nil && !IsNil(o.TransactionHash) {
		return true
	}

	return false
}

// SetTransactionHash gets a reference to the given string and assigns it to the TransactionHash field.
func (o *SponsoredSend) SetTransactionHash(v string) {
	o.TransactionHash = &v
}

// GetTransactionLink returns the TransactionLink field value if set, zero value otherwise.
func (o *SponsoredSend) GetTransactionLink() string {
	if o == nil || IsNil(o.TransactionLink) {
		var ret string
		return ret
	}
	return *o.TransactionLink
}

// GetTransactionLinkOk returns a tuple with the TransactionLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SponsoredSend) GetTransactionLinkOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionLink) {
		return nil, false
	}
	return o.TransactionLink, true
}

// HasTransactionLink returns a boolean if a field has been set.
func (o *SponsoredSend) HasTransactionLink() bool {
	if o != nil && !IsNil(o.TransactionLink) {
		return true
	}

	return false
}

// SetTransactionLink gets a reference to the given string and assigns it to the TransactionLink field.
func (o *SponsoredSend) SetTransactionLink(v string) {
	o.TransactionLink = &v
}

// GetStatus returns the Status field value
func (o *SponsoredSend) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *SponsoredSend) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *SponsoredSend) SetStatus(v string) {
	o.Status = v
}

func (o SponsoredSend) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SponsoredSend) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["to_address_id"] = o.ToAddressId
	toSerialize["raw_typed_data"] = o.RawTypedData
	toSerialize["typed_data_hash"] = o.TypedDataHash
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	if !IsNil(o.TransactionHash) {
		toSerialize["transaction_hash"] = o.TransactionHash
	}
	if !IsNil(o.TransactionLink) {
		toSerialize["transaction_link"] = o.TransactionLink
	}
	toSerialize["status"] = o.Status

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SponsoredSend) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"to_address_id",
		"raw_typed_data",
		"typed_data_hash",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSponsoredSend := _SponsoredSend{}

	err = json.Unmarshal(data, &varSponsoredSend)

	if err != nil {
		return err
	}

	*o = SponsoredSend(varSponsoredSend)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "to_address_id")
		delete(additionalProperties, "raw_typed_data")
		delete(additionalProperties, "typed_data_hash")
		delete(additionalProperties, "signature")
		delete(additionalProperties, "transaction_hash")
		delete(additionalProperties, "transaction_link")
		delete(additionalProperties, "status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSponsoredSend struct {
	value *SponsoredSend
	isSet bool
}

func (v NullableSponsoredSend) Get() *SponsoredSend {
	return v.value
}

func (v *NullableSponsoredSend) Set(val *SponsoredSend) {
	v.value = val
	v.isSet = true
}

func (v NullableSponsoredSend) IsSet() bool {
	return v.isSet
}

func (v *NullableSponsoredSend) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSponsoredSend(val *SponsoredSend) *NullableSponsoredSend {
	return &NullableSponsoredSend{value: val, isSet: true}
}

func (v NullableSponsoredSend) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSponsoredSend) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


