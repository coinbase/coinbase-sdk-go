/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DedicatedEthUnstakeTransactionDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DedicatedEthUnstakeTransactionDetail{}

// DedicatedEthUnstakeTransactionDetail A Dedicated ETH staking transaction containing both tx related details and non-tx related metadata.
type DedicatedEthUnstakeTransactionDetail struct {
	VoluntaryExitMessage SignedVoluntaryExitMessageMetadata `json:"voluntary_exit_message"`
}

type _DedicatedEthUnstakeTransactionDetail DedicatedEthUnstakeTransactionDetail

// NewDedicatedEthUnstakeTransactionDetail instantiates a new DedicatedEthUnstakeTransactionDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDedicatedEthUnstakeTransactionDetail(voluntaryExitMessage SignedVoluntaryExitMessageMetadata) *DedicatedEthUnstakeTransactionDetail {
	this := DedicatedEthUnstakeTransactionDetail{}
	this.VoluntaryExitMessage = voluntaryExitMessage
	return &this
}

// NewDedicatedEthUnstakeTransactionDetailWithDefaults instantiates a new DedicatedEthUnstakeTransactionDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDedicatedEthUnstakeTransactionDetailWithDefaults() *DedicatedEthUnstakeTransactionDetail {
	this := DedicatedEthUnstakeTransactionDetail{}
	return &this
}

// GetVoluntaryExitMessage returns the VoluntaryExitMessage field value
func (o *DedicatedEthUnstakeTransactionDetail) GetVoluntaryExitMessage() SignedVoluntaryExitMessageMetadata {
	if o == nil {
		var ret SignedVoluntaryExitMessageMetadata
		return ret
	}

	return o.VoluntaryExitMessage
}

// GetVoluntaryExitMessageOk returns a tuple with the VoluntaryExitMessage field value
// and a boolean to check if the value has been set.
func (o *DedicatedEthUnstakeTransactionDetail) GetVoluntaryExitMessageOk() (*SignedVoluntaryExitMessageMetadata, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VoluntaryExitMessage, true
}

// SetVoluntaryExitMessage sets field value
func (o *DedicatedEthUnstakeTransactionDetail) SetVoluntaryExitMessage(v SignedVoluntaryExitMessageMetadata) {
	o.VoluntaryExitMessage = v
}

func (o DedicatedEthUnstakeTransactionDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DedicatedEthUnstakeTransactionDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["voluntary_exit_message"] = o.VoluntaryExitMessage
	return toSerialize, nil
}

func (o *DedicatedEthUnstakeTransactionDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"voluntary_exit_message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDedicatedEthUnstakeTransactionDetail := _DedicatedEthUnstakeTransactionDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDedicatedEthUnstakeTransactionDetail)

	if err != nil {
		return err
	}

	*o = DedicatedEthUnstakeTransactionDetail(varDedicatedEthUnstakeTransactionDetail)

	return err
}

type NullableDedicatedEthUnstakeTransactionDetail struct {
	value *DedicatedEthUnstakeTransactionDetail
	isSet bool
}

func (v NullableDedicatedEthUnstakeTransactionDetail) Get() *DedicatedEthUnstakeTransactionDetail {
	return v.value
}

func (v *NullableDedicatedEthUnstakeTransactionDetail) Set(val *DedicatedEthUnstakeTransactionDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableDedicatedEthUnstakeTransactionDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableDedicatedEthUnstakeTransactionDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDedicatedEthUnstakeTransactionDetail(val *DedicatedEthUnstakeTransactionDetail) *NullableDedicatedEthUnstakeTransactionDetail {
	return &NullableDedicatedEthUnstakeTransactionDetail{value: val, isSet: true}
}

func (v NullableDedicatedEthUnstakeTransactionDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDedicatedEthUnstakeTransactionDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


