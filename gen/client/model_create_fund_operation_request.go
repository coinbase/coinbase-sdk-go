/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateFundOperationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFundOperationRequest{}

// CreateFundOperationRequest struct for CreateFundOperationRequest
type CreateFundOperationRequest struct {
	// The amount of the asset to fund the address with in atomic units.
	Amount string `json:"amount"`
	// The ID of the asset to fund the address with.
	AssetId string `json:"asset_id"`
	// The Optional ID of the fund quote to fund the address with. If omitted we will generate a quote and immediately execute it.
	FundQuoteId *string `json:"fund_quote_id,omitempty"`
}

type _CreateFundOperationRequest CreateFundOperationRequest

// NewCreateFundOperationRequest instantiates a new CreateFundOperationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFundOperationRequest(amount string, assetId string) *CreateFundOperationRequest {
	this := CreateFundOperationRequest{}
	this.Amount = amount
	this.AssetId = assetId
	return &this
}

// NewCreateFundOperationRequestWithDefaults instantiates a new CreateFundOperationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFundOperationRequestWithDefaults() *CreateFundOperationRequest {
	this := CreateFundOperationRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *CreateFundOperationRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CreateFundOperationRequest) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CreateFundOperationRequest) SetAmount(v string) {
	o.Amount = v
}

// GetAssetId returns the AssetId field value
func (o *CreateFundOperationRequest) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *CreateFundOperationRequest) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *CreateFundOperationRequest) SetAssetId(v string) {
	o.AssetId = v
}

// GetFundQuoteId returns the FundQuoteId field value if set, zero value otherwise.
func (o *CreateFundOperationRequest) GetFundQuoteId() string {
	if o == nil || IsNil(o.FundQuoteId) {
		var ret string
		return ret
	}
	return *o.FundQuoteId
}

// GetFundQuoteIdOk returns a tuple with the FundQuoteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFundOperationRequest) GetFundQuoteIdOk() (*string, bool) {
	if o == nil || IsNil(o.FundQuoteId) {
		return nil, false
	}
	return o.FundQuoteId, true
}

// HasFundQuoteId returns a boolean if a field has been set.
func (o *CreateFundOperationRequest) HasFundQuoteId() bool {
	if o != nil && !IsNil(o.FundQuoteId) {
		return true
	}

	return false
}

// SetFundQuoteId gets a reference to the given string and assigns it to the FundQuoteId field.
func (o *CreateFundOperationRequest) SetFundQuoteId(v string) {
	o.FundQuoteId = &v
}

func (o CreateFundOperationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFundOperationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["asset_id"] = o.AssetId
	if !IsNil(o.FundQuoteId) {
		toSerialize["fund_quote_id"] = o.FundQuoteId
	}
	return toSerialize, nil
}

func (o *CreateFundOperationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"asset_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateFundOperationRequest := _CreateFundOperationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateFundOperationRequest)

	if err != nil {
		return err
	}

	*o = CreateFundOperationRequest(varCreateFundOperationRequest)

	return err
}

type NullableCreateFundOperationRequest struct {
	value *CreateFundOperationRequest
	isSet bool
}

func (v NullableCreateFundOperationRequest) Get() *CreateFundOperationRequest {
	return v.value
}

func (v *NullableCreateFundOperationRequest) Set(val *CreateFundOperationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFundOperationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFundOperationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFundOperationRequest(val *CreateFundOperationRequest) *NullableCreateFundOperationRequest {
	return &NullableCreateFundOperationRequest{value: val, isSet: true}
}

func (v NullableCreateFundOperationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFundOperationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


