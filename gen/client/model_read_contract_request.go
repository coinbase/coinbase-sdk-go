/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ReadContractRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReadContractRequest{}

// ReadContractRequest struct for ReadContractRequest
type ReadContractRequest struct {
	// The name of the contract method to call
	Method string `json:"method"`
	// The JSON-encoded arguments to pass to the contract method. The keys should be the argument names and the values should be the argument values.
	Args string `json:"args"`
	// The JSON-encoded ABI of the contract method (optional, will use cached ABI if not provided)
	Abi *string `json:"abi,omitempty"`
}

type _ReadContractRequest ReadContractRequest

// NewReadContractRequest instantiates a new ReadContractRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReadContractRequest(method string, args string) *ReadContractRequest {
	this := ReadContractRequest{}
	this.Method = method
	this.Args = args
	return &this
}

// NewReadContractRequestWithDefaults instantiates a new ReadContractRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReadContractRequestWithDefaults() *ReadContractRequest {
	this := ReadContractRequest{}
	return &this
}

// GetMethod returns the Method field value
func (o *ReadContractRequest) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *ReadContractRequest) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *ReadContractRequest) SetMethod(v string) {
	o.Method = v
}

// GetArgs returns the Args field value
func (o *ReadContractRequest) GetArgs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Args
}

// GetArgsOk returns a tuple with the Args field value
// and a boolean to check if the value has been set.
func (o *ReadContractRequest) GetArgsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Args, true
}

// SetArgs sets field value
func (o *ReadContractRequest) SetArgs(v string) {
	o.Args = v
}

// GetAbi returns the Abi field value if set, zero value otherwise.
func (o *ReadContractRequest) GetAbi() string {
	if o == nil || IsNil(o.Abi) {
		var ret string
		return ret
	}
	return *o.Abi
}

// GetAbiOk returns a tuple with the Abi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReadContractRequest) GetAbiOk() (*string, bool) {
	if o == nil || IsNil(o.Abi) {
		return nil, false
	}
	return o.Abi, true
}

// HasAbi returns a boolean if a field has been set.
func (o *ReadContractRequest) HasAbi() bool {
	if o != nil && !IsNil(o.Abi) {
		return true
	}

	return false
}

// SetAbi gets a reference to the given string and assigns it to the Abi field.
func (o *ReadContractRequest) SetAbi(v string) {
	o.Abi = &v
}

func (o ReadContractRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReadContractRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["method"] = o.Method
	toSerialize["args"] = o.Args
	if !IsNil(o.Abi) {
		toSerialize["abi"] = o.Abi
	}
	return toSerialize, nil
}

func (o *ReadContractRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"method",
		"args",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReadContractRequest := _ReadContractRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReadContractRequest)

	if err != nil {
		return err
	}

	*o = ReadContractRequest(varReadContractRequest)

	return err
}

type NullableReadContractRequest struct {
	value *ReadContractRequest
	isSet bool
}

func (v NullableReadContractRequest) Get() *ReadContractRequest {
	return v.value
}

func (v *NullableReadContractRequest) Set(val *ReadContractRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReadContractRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReadContractRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReadContractRequest(val *ReadContractRequest) *NullableReadContractRequest {
	return &NullableReadContractRequest{value: val, isSet: true}
}

func (v NullableReadContractRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReadContractRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


