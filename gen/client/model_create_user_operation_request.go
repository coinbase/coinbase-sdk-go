/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateUserOperationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserOperationRequest{}

// CreateUserOperationRequest struct for CreateUserOperationRequest
type CreateUserOperationRequest struct {
	// The list of calls to make from the smart wallet.
	Calls []Call `json:"calls"`
	AdditionalProperties map[string]interface{}
}

type _CreateUserOperationRequest CreateUserOperationRequest

// NewCreateUserOperationRequest instantiates a new CreateUserOperationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserOperationRequest(calls []Call) *CreateUserOperationRequest {
	this := CreateUserOperationRequest{}
	this.Calls = calls
	return &this
}

// NewCreateUserOperationRequestWithDefaults instantiates a new CreateUserOperationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserOperationRequestWithDefaults() *CreateUserOperationRequest {
	this := CreateUserOperationRequest{}
	return &this
}

// GetCalls returns the Calls field value
func (o *CreateUserOperationRequest) GetCalls() []Call {
	if o == nil {
		var ret []Call
		return ret
	}

	return o.Calls
}

// GetCallsOk returns a tuple with the Calls field value
// and a boolean to check if the value has been set.
func (o *CreateUserOperationRequest) GetCallsOk() ([]Call, bool) {
	if o == nil {
		return nil, false
	}
	return o.Calls, true
}

// SetCalls sets field value
func (o *CreateUserOperationRequest) SetCalls(v []Call) {
	o.Calls = v
}

func (o CreateUserOperationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserOperationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["calls"] = o.Calls

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateUserOperationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"calls",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUserOperationRequest := _CreateUserOperationRequest{}

	err = json.Unmarshal(data, &varCreateUserOperationRequest)

	if err != nil {
		return err
	}

	*o = CreateUserOperationRequest(varCreateUserOperationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "calls")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateUserOperationRequest struct {
	value *CreateUserOperationRequest
	isSet bool
}

func (v NullableCreateUserOperationRequest) Get() *CreateUserOperationRequest {
	return v.value
}

func (v *NullableCreateUserOperationRequest) Set(val *CreateUserOperationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserOperationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserOperationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserOperationRequest(val *CreateUserOperationRequest) *NullableCreateUserOperationRequest {
	return &NullableCreateUserOperationRequest{value: val, isSet: true}
}

func (v NullableCreateUserOperationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserOperationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


