/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// checks if the BroadcastStakingOperationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BroadcastStakingOperationRequest{}

// BroadcastStakingOperationRequest struct for BroadcastStakingOperationRequest
type BroadcastStakingOperationRequest struct {
	// The hex-encoded signed payload of the staking operation.
	SignedPayload string `json:"signed_payload"`
	// The index in the transaction array of the staking operation.
	TransactionIndex int32 `json:"transaction_index"`
	AdditionalProperties map[string]interface{}
}

type _BroadcastStakingOperationRequest BroadcastStakingOperationRequest

// NewBroadcastStakingOperationRequest instantiates a new BroadcastStakingOperationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBroadcastStakingOperationRequest(signedPayload string, transactionIndex int32) *BroadcastStakingOperationRequest {
	this := BroadcastStakingOperationRequest{}
	this.SignedPayload = signedPayload
	this.TransactionIndex = transactionIndex
	return &this
}

// NewBroadcastStakingOperationRequestWithDefaults instantiates a new BroadcastStakingOperationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBroadcastStakingOperationRequestWithDefaults() *BroadcastStakingOperationRequest {
	this := BroadcastStakingOperationRequest{}
	return &this
}

// GetSignedPayload returns the SignedPayload field value
func (o *BroadcastStakingOperationRequest) GetSignedPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignedPayload
}

// GetSignedPayloadOk returns a tuple with the SignedPayload field value
// and a boolean to check if the value has been set.
func (o *BroadcastStakingOperationRequest) GetSignedPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignedPayload, true
}

// SetSignedPayload sets field value
func (o *BroadcastStakingOperationRequest) SetSignedPayload(v string) {
	o.SignedPayload = v
}

// GetTransactionIndex returns the TransactionIndex field value
func (o *BroadcastStakingOperationRequest) GetTransactionIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TransactionIndex
}

// GetTransactionIndexOk returns a tuple with the TransactionIndex field value
// and a boolean to check if the value has been set.
func (o *BroadcastStakingOperationRequest) GetTransactionIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransactionIndex, true
}

// SetTransactionIndex sets field value
func (o *BroadcastStakingOperationRequest) SetTransactionIndex(v int32) {
	o.TransactionIndex = v
}

func (o BroadcastStakingOperationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BroadcastStakingOperationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signed_payload"] = o.SignedPayload
	toSerialize["transaction_index"] = o.TransactionIndex

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BroadcastStakingOperationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"signed_payload",
		"transaction_index",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBroadcastStakingOperationRequest := _BroadcastStakingOperationRequest{}

	err = json.Unmarshal(data, &varBroadcastStakingOperationRequest)

	if err != nil {
		return err
	}

	*o = BroadcastStakingOperationRequest(varBroadcastStakingOperationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "signed_payload")
		delete(additionalProperties, "transaction_index")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBroadcastStakingOperationRequest struct {
	value *BroadcastStakingOperationRequest
	isSet bool
}

func (v NullableBroadcastStakingOperationRequest) Get() *BroadcastStakingOperationRequest {
	return v.value
}

func (v *NullableBroadcastStakingOperationRequest) Set(val *BroadcastStakingOperationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBroadcastStakingOperationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBroadcastStakingOperationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBroadcastStakingOperationRequest(val *BroadcastStakingOperationRequest) *NullableBroadcastStakingOperationRequest {
	return &NullableBroadcastStakingOperationRequest{value: val, isSet: true}
}

func (v NullableBroadcastStakingOperationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBroadcastStakingOperationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


