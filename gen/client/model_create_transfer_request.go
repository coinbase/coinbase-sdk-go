/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateTransferRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTransferRequest{}

// CreateTransferRequest struct for CreateTransferRequest
type CreateTransferRequest struct {
	// The amount to transfer
	Amount string `json:"amount"`
	// The ID of the blockchain network
	NetworkId string `json:"network_id"`
	// The ID of the asset to transfer
	AssetId string `json:"asset_id"`
	// The destination address, which can be a 0x address, Basename, or ENS name
	Destination string `json:"destination"`
	// Whether the transfer uses sponsored gas
	Gasless *bool `json:"gasless,omitempty"`
}

type _CreateTransferRequest CreateTransferRequest

// NewCreateTransferRequest instantiates a new CreateTransferRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTransferRequest(amount string, networkId string, assetId string, destination string) *CreateTransferRequest {
	this := CreateTransferRequest{}
	this.Amount = amount
	this.NetworkId = networkId
	this.AssetId = assetId
	this.Destination = destination
	return &this
}

// NewCreateTransferRequestWithDefaults instantiates a new CreateTransferRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTransferRequestWithDefaults() *CreateTransferRequest {
	this := CreateTransferRequest{}
	return &this
}

// GetAmount returns the Amount field value
func (o *CreateTransferRequest) GetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequest) GetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *CreateTransferRequest) SetAmount(v string) {
	o.Amount = v
}

// GetNetworkId returns the NetworkId field value
func (o *CreateTransferRequest) GetNetworkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequest) GetNetworkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkId, true
}

// SetNetworkId sets field value
func (o *CreateTransferRequest) SetNetworkId(v string) {
	o.NetworkId = v
}

// GetAssetId returns the AssetId field value
func (o *CreateTransferRequest) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequest) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *CreateTransferRequest) SetAssetId(v string) {
	o.AssetId = v
}

// GetDestination returns the Destination field value
func (o *CreateTransferRequest) GetDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *CreateTransferRequest) GetDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *CreateTransferRequest) SetDestination(v string) {
	o.Destination = v
}

// GetGasless returns the Gasless field value if set, zero value otherwise.
func (o *CreateTransferRequest) GetGasless() bool {
	if o == nil || IsNil(o.Gasless) {
		var ret bool
		return ret
	}
	return *o.Gasless
}

// GetGaslessOk returns a tuple with the Gasless field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateTransferRequest) GetGaslessOk() (*bool, bool) {
	if o == nil || IsNil(o.Gasless) {
		return nil, false
	}
	return o.Gasless, true
}

// HasGasless returns a boolean if a field has been set.
func (o *CreateTransferRequest) HasGasless() bool {
	if o != nil && !IsNil(o.Gasless) {
		return true
	}

	return false
}

// SetGasless gets a reference to the given bool and assigns it to the Gasless field.
func (o *CreateTransferRequest) SetGasless(v bool) {
	o.Gasless = &v
}

func (o CreateTransferRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTransferRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amount"] = o.Amount
	toSerialize["network_id"] = o.NetworkId
	toSerialize["asset_id"] = o.AssetId
	toSerialize["destination"] = o.Destination
	if !IsNil(o.Gasless) {
		toSerialize["gasless"] = o.Gasless
	}
	return toSerialize, nil
}

func (o *CreateTransferRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"amount",
		"network_id",
		"asset_id",
		"destination",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateTransferRequest := _CreateTransferRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateTransferRequest)

	if err != nil {
		return err
	}

	*o = CreateTransferRequest(varCreateTransferRequest)

	return err
}

type NullableCreateTransferRequest struct {
	value *CreateTransferRequest
	isSet bool
}

func (v NullableCreateTransferRequest) Get() *CreateTransferRequest {
	return v.value
}

func (v *NullableCreateTransferRequest) Set(val *CreateTransferRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTransferRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTransferRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTransferRequest(val *CreateTransferRequest) *NullableCreateTransferRequest {
	return &NullableCreateTransferRequest{value: val, isSet: true}
}

func (v NullableCreateTransferRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTransferRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


