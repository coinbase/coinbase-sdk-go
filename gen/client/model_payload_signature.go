/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PayloadSignature type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayloadSignature{}

// PayloadSignature A payload signed by an address.
type PayloadSignature struct {
	// The ID of the payload signature.
	PayloadSignatureId string `json:"payload_signature_id"`
	// The ID of the wallet that owns the address.
	WalletId string `json:"wallet_id"`
	// The onchain address of the signer.
	AddressId string `json:"address_id"`
	// The unsigned payload. This is the payload that needs to be signed by the signer address.
	UnsignedPayload string `json:"unsigned_payload"`
	// The signature of the payload.
	Signature *string `json:"signature,omitempty"`
	// The status of the payload signature.
	Status string `json:"status"`
}

type _PayloadSignature PayloadSignature

// NewPayloadSignature instantiates a new PayloadSignature object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayloadSignature(payloadSignatureId string, walletId string, addressId string, unsignedPayload string, status string) *PayloadSignature {
	this := PayloadSignature{}
	this.PayloadSignatureId = payloadSignatureId
	this.WalletId = walletId
	this.AddressId = addressId
	this.UnsignedPayload = unsignedPayload
	this.Status = status
	return &this
}

// NewPayloadSignatureWithDefaults instantiates a new PayloadSignature object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayloadSignatureWithDefaults() *PayloadSignature {
	this := PayloadSignature{}
	return &this
}

// GetPayloadSignatureId returns the PayloadSignatureId field value
func (o *PayloadSignature) GetPayloadSignatureId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PayloadSignatureId
}

// GetPayloadSignatureIdOk returns a tuple with the PayloadSignatureId field value
// and a boolean to check if the value has been set.
func (o *PayloadSignature) GetPayloadSignatureIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PayloadSignatureId, true
}

// SetPayloadSignatureId sets field value
func (o *PayloadSignature) SetPayloadSignatureId(v string) {
	o.PayloadSignatureId = v
}

// GetWalletId returns the WalletId field value
func (o *PayloadSignature) GetWalletId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value
// and a boolean to check if the value has been set.
func (o *PayloadSignature) GetWalletIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WalletId, true
}

// SetWalletId sets field value
func (o *PayloadSignature) SetWalletId(v string) {
	o.WalletId = v
}

// GetAddressId returns the AddressId field value
func (o *PayloadSignature) GetAddressId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddressId
}

// GetAddressIdOk returns a tuple with the AddressId field value
// and a boolean to check if the value has been set.
func (o *PayloadSignature) GetAddressIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddressId, true
}

// SetAddressId sets field value
func (o *PayloadSignature) SetAddressId(v string) {
	o.AddressId = v
}

// GetUnsignedPayload returns the UnsignedPayload field value
func (o *PayloadSignature) GetUnsignedPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UnsignedPayload
}

// GetUnsignedPayloadOk returns a tuple with the UnsignedPayload field value
// and a boolean to check if the value has been set.
func (o *PayloadSignature) GetUnsignedPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnsignedPayload, true
}

// SetUnsignedPayload sets field value
func (o *PayloadSignature) SetUnsignedPayload(v string) {
	o.UnsignedPayload = v
}

// GetSignature returns the Signature field value if set, zero value otherwise.
func (o *PayloadSignature) GetSignature() string {
	if o == nil || IsNil(o.Signature) {
		var ret string
		return ret
	}
	return *o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayloadSignature) GetSignatureOk() (*string, bool) {
	if o == nil || IsNil(o.Signature) {
		return nil, false
	}
	return o.Signature, true
}

// HasSignature returns a boolean if a field has been set.
func (o *PayloadSignature) HasSignature() bool {
	if o != nil && !IsNil(o.Signature) {
		return true
	}

	return false
}

// SetSignature gets a reference to the given string and assigns it to the Signature field.
func (o *PayloadSignature) SetSignature(v string) {
	o.Signature = &v
}

// GetStatus returns the Status field value
func (o *PayloadSignature) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PayloadSignature) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PayloadSignature) SetStatus(v string) {
	o.Status = v
}

func (o PayloadSignature) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayloadSignature) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["payload_signature_id"] = o.PayloadSignatureId
	toSerialize["wallet_id"] = o.WalletId
	toSerialize["address_id"] = o.AddressId
	toSerialize["unsigned_payload"] = o.UnsignedPayload
	if !IsNil(o.Signature) {
		toSerialize["signature"] = o.Signature
	}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *PayloadSignature) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"payload_signature_id",
		"wallet_id",
		"address_id",
		"unsigned_payload",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPayloadSignature := _PayloadSignature{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPayloadSignature)

	if err != nil {
		return err
	}

	*o = PayloadSignature(varPayloadSignature)

	return err
}

type NullablePayloadSignature struct {
	value *PayloadSignature
	isSet bool
}

func (v NullablePayloadSignature) Get() *PayloadSignature {
	return v.value
}

func (v *NullablePayloadSignature) Set(val *PayloadSignature) {
	v.value = val
	v.isSet = true
}

func (v NullablePayloadSignature) IsSet() bool {
	return v.isSet
}

func (v *NullablePayloadSignature) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayloadSignature(val *PayloadSignature) *NullablePayloadSignature {
	return &NullablePayloadSignature{value: val, isSet: true}
}

func (v NullablePayloadSignature) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayloadSignature) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


