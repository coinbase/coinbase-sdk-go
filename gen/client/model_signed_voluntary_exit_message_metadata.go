/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"fmt"
)

// checks if the SignedVoluntaryExitMessageMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignedVoluntaryExitMessageMetadata{}

// SignedVoluntaryExitMessageMetadata Signed voluntary exit message metadata to be provided to beacon chain to exit a validator.
type SignedVoluntaryExitMessageMetadata struct {
	// The public key of the validator associated with the exit message.
	ValidatorPubKey string `json:"validator_pub_key"`
	// The current fork version of the Ethereum beacon chain.
	Fork string `json:"fork"`
	// A base64 encoded version of a json string representing a voluntary exit message.
	SignedVoluntaryExit string `json:"signed_voluntary_exit"`
	AdditionalProperties map[string]interface{}
}

type _SignedVoluntaryExitMessageMetadata SignedVoluntaryExitMessageMetadata

// NewSignedVoluntaryExitMessageMetadata instantiates a new SignedVoluntaryExitMessageMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignedVoluntaryExitMessageMetadata(validatorPubKey string, fork string, signedVoluntaryExit string) *SignedVoluntaryExitMessageMetadata {
	this := SignedVoluntaryExitMessageMetadata{}
	this.ValidatorPubKey = validatorPubKey
	this.Fork = fork
	this.SignedVoluntaryExit = signedVoluntaryExit
	return &this
}

// NewSignedVoluntaryExitMessageMetadataWithDefaults instantiates a new SignedVoluntaryExitMessageMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignedVoluntaryExitMessageMetadataWithDefaults() *SignedVoluntaryExitMessageMetadata {
	this := SignedVoluntaryExitMessageMetadata{}
	return &this
}

// GetValidatorPubKey returns the ValidatorPubKey field value
func (o *SignedVoluntaryExitMessageMetadata) GetValidatorPubKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValidatorPubKey
}

// GetValidatorPubKeyOk returns a tuple with the ValidatorPubKey field value
// and a boolean to check if the value has been set.
func (o *SignedVoluntaryExitMessageMetadata) GetValidatorPubKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidatorPubKey, true
}

// SetValidatorPubKey sets field value
func (o *SignedVoluntaryExitMessageMetadata) SetValidatorPubKey(v string) {
	o.ValidatorPubKey = v
}

// GetFork returns the Fork field value
func (o *SignedVoluntaryExitMessageMetadata) GetFork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fork
}

// GetForkOk returns a tuple with the Fork field value
// and a boolean to check if the value has been set.
func (o *SignedVoluntaryExitMessageMetadata) GetForkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fork, true
}

// SetFork sets field value
func (o *SignedVoluntaryExitMessageMetadata) SetFork(v string) {
	o.Fork = v
}

// GetSignedVoluntaryExit returns the SignedVoluntaryExit field value
func (o *SignedVoluntaryExitMessageMetadata) GetSignedVoluntaryExit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignedVoluntaryExit
}

// GetSignedVoluntaryExitOk returns a tuple with the SignedVoluntaryExit field value
// and a boolean to check if the value has been set.
func (o *SignedVoluntaryExitMessageMetadata) GetSignedVoluntaryExitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignedVoluntaryExit, true
}

// SetSignedVoluntaryExit sets field value
func (o *SignedVoluntaryExitMessageMetadata) SetSignedVoluntaryExit(v string) {
	o.SignedVoluntaryExit = v
}

func (o SignedVoluntaryExitMessageMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignedVoluntaryExitMessageMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["validator_pub_key"] = o.ValidatorPubKey
	toSerialize["fork"] = o.Fork
	toSerialize["signed_voluntary_exit"] = o.SignedVoluntaryExit

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SignedVoluntaryExitMessageMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"validator_pub_key",
		"fork",
		"signed_voluntary_exit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSignedVoluntaryExitMessageMetadata := _SignedVoluntaryExitMessageMetadata{}

	err = json.Unmarshal(data, &varSignedVoluntaryExitMessageMetadata)

	if err != nil {
		return err
	}

	*o = SignedVoluntaryExitMessageMetadata(varSignedVoluntaryExitMessageMetadata)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "validator_pub_key")
		delete(additionalProperties, "fork")
		delete(additionalProperties, "signed_voluntary_exit")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSignedVoluntaryExitMessageMetadata struct {
	value *SignedVoluntaryExitMessageMetadata
	isSet bool
}

func (v NullableSignedVoluntaryExitMessageMetadata) Get() *SignedVoluntaryExitMessageMetadata {
	return v.value
}

func (v *NullableSignedVoluntaryExitMessageMetadata) Set(val *SignedVoluntaryExitMessageMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSignedVoluntaryExitMessageMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSignedVoluntaryExitMessageMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignedVoluntaryExitMessageMetadata(val *SignedVoluntaryExitMessageMetadata) *NullableSignedVoluntaryExitMessageMetadata {
	return &NullableSignedVoluntaryExitMessageMetadata{value: val, isSet: true}
}

func (v NullableSignedVoluntaryExitMessageMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignedVoluntaryExitMessageMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


