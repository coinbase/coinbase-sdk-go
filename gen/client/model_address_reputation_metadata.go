/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddressReputationMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressReputationMetadata{}

// AddressReputationMetadata The metadata for the reputation score of onchain address.
type AddressReputationMetadata struct {
	// The total number of transactions performed by the address.
	TotalTransactions int32 `json:"total_transactions"`
	// The number of unique days the address was active.
	UniqueDaysActive int32 `json:"unique_days_active"`
	// The longest streak of consecutive active days.
	LongestActiveStreak int32 `json:"longest_active_streak"`
	// The current streak of consecutive active days.
	CurrentActiveStreak int32 `json:"current_active_streak"`
	// The total number of days the address has been active.
	ActivityPeriodDays int32 `json:"activity_period_days"`
	// The number of token swaps performed by the address.
	TokenSwapsPerformed int32 `json:"token_swaps_performed"`
	// The number of bridge transactions performed by the address.
	BridgeTransactionsPerformed int32 `json:"bridge_transactions_performed"`
	// The number of lend, borrow, or stake transactions performed by the address.
	LendBorrowStakeTransactions int32 `json:"lend_borrow_stake_transactions"`
	// The number of interactions with ENS contracts.
	EnsContractInteractions int32 `json:"ens_contract_interactions"`
	// The number of smart contracts deployed by the address.
	SmartContractDeployments int32 `json:"smart_contract_deployments"`
}

type _AddressReputationMetadata AddressReputationMetadata

// NewAddressReputationMetadata instantiates a new AddressReputationMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressReputationMetadata(totalTransactions int32, uniqueDaysActive int32, longestActiveStreak int32, currentActiveStreak int32, activityPeriodDays int32, tokenSwapsPerformed int32, bridgeTransactionsPerformed int32, lendBorrowStakeTransactions int32, ensContractInteractions int32, smartContractDeployments int32) *AddressReputationMetadata {
	this := AddressReputationMetadata{}
	this.TotalTransactions = totalTransactions
	this.UniqueDaysActive = uniqueDaysActive
	this.LongestActiveStreak = longestActiveStreak
	this.CurrentActiveStreak = currentActiveStreak
	this.ActivityPeriodDays = activityPeriodDays
	this.TokenSwapsPerformed = tokenSwapsPerformed
	this.BridgeTransactionsPerformed = bridgeTransactionsPerformed
	this.LendBorrowStakeTransactions = lendBorrowStakeTransactions
	this.EnsContractInteractions = ensContractInteractions
	this.SmartContractDeployments = smartContractDeployments
	return &this
}

// NewAddressReputationMetadataWithDefaults instantiates a new AddressReputationMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressReputationMetadataWithDefaults() *AddressReputationMetadata {
	this := AddressReputationMetadata{}
	return &this
}

// GetTotalTransactions returns the TotalTransactions field value
func (o *AddressReputationMetadata) GetTotalTransactions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalTransactions
}

// GetTotalTransactionsOk returns a tuple with the TotalTransactions field value
// and a boolean to check if the value has been set.
func (o *AddressReputationMetadata) GetTotalTransactionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalTransactions, true
}

// SetTotalTransactions sets field value
func (o *AddressReputationMetadata) SetTotalTransactions(v int32) {
	o.TotalTransactions = v
}

// GetUniqueDaysActive returns the UniqueDaysActive field value
func (o *AddressReputationMetadata) GetUniqueDaysActive() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UniqueDaysActive
}

// GetUniqueDaysActiveOk returns a tuple with the UniqueDaysActive field value
// and a boolean to check if the value has been set.
func (o *AddressReputationMetadata) GetUniqueDaysActiveOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UniqueDaysActive, true
}

// SetUniqueDaysActive sets field value
func (o *AddressReputationMetadata) SetUniqueDaysActive(v int32) {
	o.UniqueDaysActive = v
}

// GetLongestActiveStreak returns the LongestActiveStreak field value
func (o *AddressReputationMetadata) GetLongestActiveStreak() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LongestActiveStreak
}

// GetLongestActiveStreakOk returns a tuple with the LongestActiveStreak field value
// and a boolean to check if the value has been set.
func (o *AddressReputationMetadata) GetLongestActiveStreakOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LongestActiveStreak, true
}

// SetLongestActiveStreak sets field value
func (o *AddressReputationMetadata) SetLongestActiveStreak(v int32) {
	o.LongestActiveStreak = v
}

// GetCurrentActiveStreak returns the CurrentActiveStreak field value
func (o *AddressReputationMetadata) GetCurrentActiveStreak() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrentActiveStreak
}

// GetCurrentActiveStreakOk returns a tuple with the CurrentActiveStreak field value
// and a boolean to check if the value has been set.
func (o *AddressReputationMetadata) GetCurrentActiveStreakOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentActiveStreak, true
}

// SetCurrentActiveStreak sets field value
func (o *AddressReputationMetadata) SetCurrentActiveStreak(v int32) {
	o.CurrentActiveStreak = v
}

// GetActivityPeriodDays returns the ActivityPeriodDays field value
func (o *AddressReputationMetadata) GetActivityPeriodDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ActivityPeriodDays
}

// GetActivityPeriodDaysOk returns a tuple with the ActivityPeriodDays field value
// and a boolean to check if the value has been set.
func (o *AddressReputationMetadata) GetActivityPeriodDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivityPeriodDays, true
}

// SetActivityPeriodDays sets field value
func (o *AddressReputationMetadata) SetActivityPeriodDays(v int32) {
	o.ActivityPeriodDays = v
}

// GetTokenSwapsPerformed returns the TokenSwapsPerformed field value
func (o *AddressReputationMetadata) GetTokenSwapsPerformed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TokenSwapsPerformed
}

// GetTokenSwapsPerformedOk returns a tuple with the TokenSwapsPerformed field value
// and a boolean to check if the value has been set.
func (o *AddressReputationMetadata) GetTokenSwapsPerformedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenSwapsPerformed, true
}

// SetTokenSwapsPerformed sets field value
func (o *AddressReputationMetadata) SetTokenSwapsPerformed(v int32) {
	o.TokenSwapsPerformed = v
}

// GetBridgeTransactionsPerformed returns the BridgeTransactionsPerformed field value
func (o *AddressReputationMetadata) GetBridgeTransactionsPerformed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BridgeTransactionsPerformed
}

// GetBridgeTransactionsPerformedOk returns a tuple with the BridgeTransactionsPerformed field value
// and a boolean to check if the value has been set.
func (o *AddressReputationMetadata) GetBridgeTransactionsPerformedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BridgeTransactionsPerformed, true
}

// SetBridgeTransactionsPerformed sets field value
func (o *AddressReputationMetadata) SetBridgeTransactionsPerformed(v int32) {
	o.BridgeTransactionsPerformed = v
}

// GetLendBorrowStakeTransactions returns the LendBorrowStakeTransactions field value
func (o *AddressReputationMetadata) GetLendBorrowStakeTransactions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LendBorrowStakeTransactions
}

// GetLendBorrowStakeTransactionsOk returns a tuple with the LendBorrowStakeTransactions field value
// and a boolean to check if the value has been set.
func (o *AddressReputationMetadata) GetLendBorrowStakeTransactionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LendBorrowStakeTransactions, true
}

// SetLendBorrowStakeTransactions sets field value
func (o *AddressReputationMetadata) SetLendBorrowStakeTransactions(v int32) {
	o.LendBorrowStakeTransactions = v
}

// GetEnsContractInteractions returns the EnsContractInteractions field value
func (o *AddressReputationMetadata) GetEnsContractInteractions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EnsContractInteractions
}

// GetEnsContractInteractionsOk returns a tuple with the EnsContractInteractions field value
// and a boolean to check if the value has been set.
func (o *AddressReputationMetadata) GetEnsContractInteractionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnsContractInteractions, true
}

// SetEnsContractInteractions sets field value
func (o *AddressReputationMetadata) SetEnsContractInteractions(v int32) {
	o.EnsContractInteractions = v
}

// GetSmartContractDeployments returns the SmartContractDeployments field value
func (o *AddressReputationMetadata) GetSmartContractDeployments() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SmartContractDeployments
}

// GetSmartContractDeploymentsOk returns a tuple with the SmartContractDeployments field value
// and a boolean to check if the value has been set.
func (o *AddressReputationMetadata) GetSmartContractDeploymentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmartContractDeployments, true
}

// SetSmartContractDeployments sets field value
func (o *AddressReputationMetadata) SetSmartContractDeployments(v int32) {
	o.SmartContractDeployments = v
}

func (o AddressReputationMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressReputationMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total_transactions"] = o.TotalTransactions
	toSerialize["unique_days_active"] = o.UniqueDaysActive
	toSerialize["longest_active_streak"] = o.LongestActiveStreak
	toSerialize["current_active_streak"] = o.CurrentActiveStreak
	toSerialize["activity_period_days"] = o.ActivityPeriodDays
	toSerialize["token_swaps_performed"] = o.TokenSwapsPerformed
	toSerialize["bridge_transactions_performed"] = o.BridgeTransactionsPerformed
	toSerialize["lend_borrow_stake_transactions"] = o.LendBorrowStakeTransactions
	toSerialize["ens_contract_interactions"] = o.EnsContractInteractions
	toSerialize["smart_contract_deployments"] = o.SmartContractDeployments
	return toSerialize, nil
}

func (o *AddressReputationMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"total_transactions",
		"unique_days_active",
		"longest_active_streak",
		"current_active_streak",
		"activity_period_days",
		"token_swaps_performed",
		"bridge_transactions_performed",
		"lend_borrow_stake_transactions",
		"ens_contract_interactions",
		"smart_contract_deployments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddressReputationMetadata := _AddressReputationMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddressReputationMetadata)

	if err != nil {
		return err
	}

	*o = AddressReputationMetadata(varAddressReputationMetadata)

	return err
}

type NullableAddressReputationMetadata struct {
	value *AddressReputationMetadata
	isSet bool
}

func (v NullableAddressReputationMetadata) Get() *AddressReputationMetadata {
	return v.value
}

func (v *NullableAddressReputationMetadata) Set(val *AddressReputationMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressReputationMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressReputationMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressReputationMetadata(val *AddressReputationMetadata) *NullableAddressReputationMetadata {
	return &NullableAddressReputationMetadata{value: val, isSet: true}
}

func (v NullableAddressReputationMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressReputationMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


