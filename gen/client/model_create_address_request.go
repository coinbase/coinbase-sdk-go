/*
Coinbase Platform API

This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

API version: 0.0.1-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CreateAddressRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAddressRequest{}

// CreateAddressRequest struct for CreateAddressRequest
type CreateAddressRequest struct {
	// The public key from which the address will be derived.
	PublicKey *string `json:"public_key,omitempty"`
	// An attestation signed by the private key that is associated with the wallet. The attestation will be a hex-encoded signature of a json payload with fields `wallet_id` and `public_key`, signed by the private key associated with the public_key set in the request.
	Attestation *string `json:"attestation,omitempty"`
	// The index of the address within the wallet.
	AddressIndex *int32 `json:"address_index,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateAddressRequest CreateAddressRequest

// NewCreateAddressRequest instantiates a new CreateAddressRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAddressRequest() *CreateAddressRequest {
	this := CreateAddressRequest{}
	return &this
}

// NewCreateAddressRequestWithDefaults instantiates a new CreateAddressRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAddressRequestWithDefaults() *CreateAddressRequest {
	this := CreateAddressRequest{}
	return &this
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *CreateAddressRequest) GetPublicKey() string {
	if o == nil || IsNil(o.PublicKey) {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAddressRequest) GetPublicKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PublicKey) {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *CreateAddressRequest) HasPublicKey() bool {
	if o != nil && !IsNil(o.PublicKey) {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *CreateAddressRequest) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetAttestation returns the Attestation field value if set, zero value otherwise.
func (o *CreateAddressRequest) GetAttestation() string {
	if o == nil || IsNil(o.Attestation) {
		var ret string
		return ret
	}
	return *o.Attestation
}

// GetAttestationOk returns a tuple with the Attestation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAddressRequest) GetAttestationOk() (*string, bool) {
	if o == nil || IsNil(o.Attestation) {
		return nil, false
	}
	return o.Attestation, true
}

// HasAttestation returns a boolean if a field has been set.
func (o *CreateAddressRequest) HasAttestation() bool {
	if o != nil && !IsNil(o.Attestation) {
		return true
	}

	return false
}

// SetAttestation gets a reference to the given string and assigns it to the Attestation field.
func (o *CreateAddressRequest) SetAttestation(v string) {
	o.Attestation = &v
}

// GetAddressIndex returns the AddressIndex field value if set, zero value otherwise.
func (o *CreateAddressRequest) GetAddressIndex() int32 {
	if o == nil || IsNil(o.AddressIndex) {
		var ret int32
		return ret
	}
	return *o.AddressIndex
}

// GetAddressIndexOk returns a tuple with the AddressIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAddressRequest) GetAddressIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.AddressIndex) {
		return nil, false
	}
	return o.AddressIndex, true
}

// HasAddressIndex returns a boolean if a field has been set.
func (o *CreateAddressRequest) HasAddressIndex() bool {
	if o != nil && !IsNil(o.AddressIndex) {
		return true
	}

	return false
}

// SetAddressIndex gets a reference to the given int32 and assigns it to the AddressIndex field.
func (o *CreateAddressRequest) SetAddressIndex(v int32) {
	o.AddressIndex = &v
}

func (o CreateAddressRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAddressRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PublicKey) {
		toSerialize["public_key"] = o.PublicKey
	}
	if !IsNil(o.Attestation) {
		toSerialize["attestation"] = o.Attestation
	}
	if !IsNil(o.AddressIndex) {
		toSerialize["address_index"] = o.AddressIndex
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAddressRequest) UnmarshalJSON(data []byte) (err error) {
	varCreateAddressRequest := _CreateAddressRequest{}

	err = json.Unmarshal(data, &varCreateAddressRequest)

	if err != nil {
		return err
	}

	*o = CreateAddressRequest(varCreateAddressRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "public_key")
		delete(additionalProperties, "attestation")
		delete(additionalProperties, "address_index")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAddressRequest struct {
	value *CreateAddressRequest
	isSet bool
}

func (v NullableCreateAddressRequest) Get() *CreateAddressRequest {
	return v.value
}

func (v *NullableCreateAddressRequest) Set(val *CreateAddressRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAddressRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAddressRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAddressRequest(val *CreateAddressRequest) *NullableCreateAddressRequest {
	return &NullableCreateAddressRequest{value: val, isSet: true}
}

func (v NullableCreateAddressRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAddressRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


